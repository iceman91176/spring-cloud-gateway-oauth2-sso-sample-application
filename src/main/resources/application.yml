spring:
  security:
    oauth2:
      client:
        registration:
          delta:
            client-id: yours-client-id
            client-secret: yours-client-secret
            authorization-grant-type: authorization_code
            redirect-uri-template: '{baseUrl}/login/oauth2/code/{registrationId}'
            clientName: gateway
        provider:
          delta:
            authorization-uri: https://auth.witcom-dev.services/auth/realms/demo-realm/protocol/openid-connect/auth
            token-uri: https://auth.witcom-dev.services/auth/realms/demo-realm/protocol/openid-connect/token
            jwt-key-uri: https://auth.witcom-dev.services/auth/realms/demo-realm/protocol/openid-connect/certs #optional you can also provide public key as property value in this application.yml but in this case you should override ReactiveJwtDecoder injection in JwtConfiguration.class
            userNameAttribute: preferred_username
  cloud:
    gateway:
      routes:
      - id: microservice1
        predicates:
        - Path=/monitor/**
        uri: "http://microservice1:8001"
        filters:
        - PreOauth2SSOGatewayFilter

      - id: microservice2
        predicates:
        - Path=/updates/**
        uri: "http://microservice2:8011"
        filters:
        - PreOauth2SSOGatewayFilter

      - id: microservice2-ws-so—Åkjs
        predicates:
        - Path=/updates/events/info/**
        uri: "http://localhost:8011"
        filters:
        - PreOauth2SSOGatewayFilter

      - id: microservice3-ws
        predicates:
        - Path=/updates/events/info/**
        uri: "ws://microservice3:8021"
        filters:
        - PreOauth2SSOGatewayFilter
